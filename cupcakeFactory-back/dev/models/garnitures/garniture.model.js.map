{"version":3,"file":"garniture.model.js","sourceRoot":"","sources":["../../../src/models/garnitures/garniture.model.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,2CAAwE;AACxE,wCAAwC;AAMxC,IAAa,cAAc,sBAA3B,MAAa,cAAe,SAAQ,aAAK;IAIvC;;;;OAIG;IACH,YAAoB,mBAAuC;QACzD,0BAA0B;QAC1B,KAAK,CAAC,gBAAc,CAAC,CAAC;QAFJ,wBAAmB,GAAnB,mBAAmB,CAAoB;QAIzD,UAAU;QACV,MAAM,GAAG,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAEpE,gBAAgB;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC;YAC3B,KAAK,EAAE;gBACL,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;aACX;YACD,GAAG,EAAE;gBACH,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,IAAI;aACX;SAEF,EAAE;YACD,UAAU,EAAE,KAAK;SAClB,CAAC,CAAC;QAEH,uFAAuF;QACvF,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE;YACtB,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,UAAU,GAAG,EAAE,GAAG;gBAC3B,OAAO,GAAG,CAAC,GAAG,CAAC;gBACf,OAAO,GAAG,CAAC;YACb,CAAC;SACF,CACF,CAAC;IACJ,CAAC;CACF,CAAA;AA3CY,cAAc;IAJ1B,kBAAU,CAAC;QACV,OAAO,EAAE,UAAU;QACnB,UAAU,EAAE,YAAY;KACzB,CAAC;qCAUyC,0BAAkB;GAThD,cAAc,CA2C1B;AA3CY,wCAAc","sourcesContent":["import { Model, MongoClientService, MongoModel } from '@hapiness/mongo';\n// import * as mongoose from 'mongoose';\n\n@MongoModel({\n  adapter: 'mongoose',\n  collection: 'garnitures'\n})\nexport class GarnitureModel extends Model {\n  // property to store schema\n  readonly schema: any;\n\n  /**\n   * Class constructor\n   *\n   * @param {MongoClientService} _mongoClientService\n   */\n  constructor(private _mongoClientService: MongoClientService) {\n    // call parent constructor\n    super(GarnitureModel);\n\n    // get dao\n    const dao = this._mongoClientService.getDao(this.connectionOptions);\n\n    // create schema\n    this.schema = new dao.Schema({\n      label: {\n        type: String,\n        required: true,\n        trim: true\n      },\n      src: {\n        type: String,\n        required: true,\n        trim: true\n      }\n\n    }, {\n      versionKey: false\n    });\n\n    // implement virtual method toJSON to delete _id field and stringify all ObjectId field\n    this.schema.set('toJSON', {\n        virtuals: true,\n        transform: function (doc, ret) {\n          delete ret._id;\n          return ret;\n        }\n      }\n    );\n  }\n}\n"]}