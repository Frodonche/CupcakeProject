{"version":3,"file":"all.route.js","sourceRoot":"","sources":["../../../../src/routes/bases/get/all.route.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAuD;AACvD,6CAAiD;AAEjD,8CAAqC;AAErC,8CAAmD;AACnD,gDAAiD;AAgBjD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IACzB;;;;OAIG;IACH,YAAoB,aAA2B,EAAU,OAAsB;QAA3D,kBAAa,GAAb,aAAa,CAAc;QAAU,YAAO,GAAP,OAAO,CAAe;IAC/E,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,OAAgB;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;aAC9B,IAAI,CACD,eAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACjC,CAAC;IACV,CAAC;CACJ,CAAA;AAnBY,gBAAgB;IAd5B,YAAK,CAAC;QACH,IAAI,EAAE,YAAY;QAClB,MAAM,EAAE,KAAK;QACb,MAAM,EAAE;YACJ,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,GAAG,EAAE,yBAAe;iBACvB;aACJ;YACD,WAAW,EAAE,eAAe;YAC5B,KAAK,EAAE,kCAAkC;YACzC,IAAI,EAAE,CAAE,KAAK,EAAE,OAAO,CAAE;SAC3B;KACJ,CAAC;qCAOqC,uBAAY,EAAmB,sBAAa;GANtE,gBAAgB,CAmB5B;AAnBY,4CAAgB","sourcesContent":["import { OnGet, Request, Route } from '@hapiness/core';\nimport { LoggerService } from '@hapiness/logger';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Base } from '../../../interfaces';\nimport { COMPOS_RESPONSE } from '../../../schemas';\nimport { BasesService } from '../../../services';\n\n@Route({\n    path: '/api/bases',\n    method: 'GET',\n    config: {\n        response: {\n            status: {\n                200: COMPOS_RESPONSE\n            }\n        },\n        description: 'Get all bases',\n        notes: 'Returns an array of bases or 204',\n        tags: [ 'api', 'bases' ]\n    }\n})\nexport class GetAllBasesRoute implements OnGet {\n    /**\n     * Class constructor\n     * @param _basesService\n     * @param _logger\n     */\n    constructor(private _basesService: BasesService, private _logger: LoggerService) {\n    }\n\n    /**\n     * OnGet implementation\n     * @param request\n     */\n    onGet(request: Request): Observable<Base[] | void> {\n        return this._basesService.listAll()\n            .pipe(\n                tap(_ => this._logger.info(_))\n            );\n    }\n}\n"]}