{"version":3,"file":"create.route.js","sourceRoot":"","sources":["../../../../src/routes/cupcakes/post/create.route.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAA6E;AAC7E,6CAAiD;AAEjD,8CAAqC;AACrC,8CAAqE;AACrE,gDAAoD;AAwBpD,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAC/B;;;;OAIG;IACH,YAAoB,gBAAiC,EAAU,OAAsB;QAAjE,qBAAgB,GAAhB,gBAAgB,CAAiB;QAAU,YAAO,GAAP,OAAO,CAAe;IACrF,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,OAAgB;QACnB,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CACrD,eAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACjC,CAAC;IACN,CAAC;CACJ,CAAA;AAlBY,sBAAsB;IAtBlC,YAAK,CAAC;QACH,IAAI,EAAE,eAAe;QACrB,MAAM,EAAE,MAAM;QACd,MAAM,EAAE;YACJ,QAAQ,EAAE;gBACN,OAAO,EAAE,yBAAe;aAC3B;YACD,OAAO,EAAE;gBACL,MAAM,EAAE,MAAM;gBACd,KAAK,EAAE,kBAAkB;gBACzB,KAAK,EAAE,IAAI;aACd;YACD,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,GAAG,EAAE,0BAAgB;iBACxB;aACJ;YACD,WAAW,EAAE,oBAAoB;YACjC,KAAK,EAAE,qCAAqC;YAC5C,IAAI,EAAE,CAAE,KAAK,EAAE,SAAS,CAAE;SAC7B;KACJ,CAAC;qCAOwC,0BAAe,EAAmB,sBAAa;GAN5E,sBAAsB,CAkBlC;AAlBY,wDAAsB","sourcesContent":["import { HTTPHandlerResponse, OnPost, Request, Route } from '@hapiness/core';\nimport { LoggerService } from '@hapiness/logger';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CUPCAKE_PAYLOAD, CUPCAKE_RESPONSE } from '../../../schemas';\nimport { CupcakesService } from '../../../services';\n\n@Route({\n    path: '/api/cupcakes',\n    method: 'POST',\n    config: {\n        validate: {\n            payload: CUPCAKE_PAYLOAD\n        },\n        payload: {\n            output: 'data',\n            allow: 'application/json',\n            parse: true\n        },\n        response: {\n            status: {\n                201: CUPCAKE_RESPONSE\n            }\n        },\n        description: 'Create one cupcake',\n        notes: 'Create a new cupcake and returns it',\n        tags: [ 'api', 'cupcake' ]\n    }\n})\nexport class PostCreateCupcakeRoute implements OnPost {\n    /**\n     * Class constructor\n     * @param _cupcakesService\n     * @param _logger\n     */\n    constructor(private _cupcakesService: CupcakesService, private _logger: LoggerService) {\n    }\n\n    /**\n     * OnPost implementation\n     * @param request\n     */\n    onPost(request: Request): Observable<HTTPHandlerResponse> {\n        return this._cupcakesService.create(request.payload).pipe(\n            tap(_ => this._logger.info(_))\n        );\n    }\n}\n"]}