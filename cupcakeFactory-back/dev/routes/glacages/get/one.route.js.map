{"version":3,"file":"one.route.js","sourceRoot":"","sources":["../../../../src/routes/glacages/get/one.route.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAuD;AACvD,6CAAiD;AAEjD,8CAAqC;AAErC,8CAAgE;AAChE,gDAAoD;AAqBpD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAC3B;;;;OAIG;IACH,YAAoB,gBAAiC,EAAU,OAAsB;QAAjE,qBAAgB,GAAhB,gBAAgB,CAAiB;QAAU,YAAO,GAAP,OAAO,CAAe;IACrF,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,OAAgB;QAClB,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC;aAC9C,IAAI,CACD,eAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACjC,CAAC;IACV,CAAC;CACJ,CAAA;AAnBY,kBAAkB;IAnB9B,YAAK,CAAC;QACH,IAAI,EAAE,oBAAoB;QAC1B,MAAM,EAAE,KAAK;QACb,MAAM,EAAE;YACJ,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,EAAE,EAAE,sBAAY;iBACnB;aACJ;YACD,QAAQ,EAAE;gBACN,MAAM,EAAE;oBACJ,GAAG,EAAE,wBAAc;iBACtB;aACJ;YACD,WAAW,EAAE,iBAAiB;YAC9B,KAAK,EAAE,wDAAwD;YAC/D,IAAI,EAAE,CAAE,KAAK,EAAE,UAAU,CAAE;SAC9B;KACJ,CAAC;qCAOwC,0BAAe,EAAmB,sBAAa;GAN5E,kBAAkB,CAmB9B;AAnBY,gDAAkB","sourcesContent":["import { OnGet, Request, Route } from '@hapiness/core';\nimport { LoggerService } from '@hapiness/logger';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Glacage } from '../../../interfaces';\nimport { ID_PARAMETER, COMPO_RESPONSE } from '../../../schemas';\nimport { GlacagesService } from '../../../services';\n\n@Route({\n    path: '/api/glacages/{id}',\n    method: 'GET',\n    config: {\n        validate: {\n            params: {\n                id: ID_PARAMETER\n            }\n        },\n        response: {\n            status: {\n                200: COMPO_RESPONSE\n            }\n        },\n        description: 'Get one glacage',\n        notes: 'Returns one glacage for the given id in path parameter',\n        tags: [ 'api', 'glacages' ]\n    }\n})\nexport class GetOneGlacageRoute implements OnGet {\n    /**\n     * Class constructor\n     * @param _glacagesService\n     * @param _logger\n     */\n    constructor(private _glacagesService: GlacagesService, private _logger: LoggerService) {\n    }\n\n    /**\n     * OnGet implementation\n     * @param request\n     */\n    onGet(request: Request): Observable<Glacage> {\n        return this._glacagesService.one(request.params.id)\n            .pipe(\n                tap(_ => this._logger.info(_))\n            );\n    }\n}\n"]}