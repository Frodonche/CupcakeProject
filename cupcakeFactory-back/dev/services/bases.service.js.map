{"version":3,"file":"bases.service.js","sourceRoot":"","sources":["../../src/services/bases.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAsC;AACtC,yCAA4C;AAE5C,+BAAkD;AAClD,8CAAoD;AAEpD,qEAAgE;AAGhE,IAAa,YAAY,GAAzB,MAAa,YAAY;IACrB;;OAEG;IACH,YAAoB,qBAA2C;QAA3C,0BAAqB,GAArB,qBAAqB,CAAsB;IAC/D,CAAC;IAED;;;;OAIG;IACH,OAAO;QACH,OAAO,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC;IAC7C,CAAC;IAED;;;;;;OAMG;IACH,GAAG,CAAC,EAAU;QACV,OAAO,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,EAAE,CAAC;aACzC,IAAI,CACD,sBAAU,CAAC,CAAC,CAAC,EAAE,CAAC,iBAAU,CAAC,WAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAC/D,mBAAO,CAAC,CAAC,CAAC,EAAE,CACR,CAAC,CAAC,CAAC,CAAC,CAAC;YACD,SAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACP,iBAAU,CAAC,WAAI,CAAC,QAAQ,CAAC,0BAA0B,EAAE,UAAU,CAAC,CAAC,CACxE,CACJ,CAAC;IACV,CAAC;CACJ,CAAA;AAlCY,YAAY;IADxB,iBAAU,EAAE;qCAKkC,6CAAoB;GAJtD,YAAY,CAkCxB;AAlCY,oCAAY","sourcesContent":["import { Biim } from '@hapiness/biim';\nimport { Injectable } from '@hapiness/core';\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, flatMap} from 'rxjs/operators';\nimport { Base } from '../interfaces';\nimport { BasesDocumentService } from './bases-document.service';\n\n@Injectable()\nexport class BasesService {\n    /**\n     * Class constructor\n     */\n    constructor(private _basesDocumentService: BasesDocumentService) {\n    }\n\n    /**\n     * Returns all existing bases in the list\n     *\n     * @returns {Observable<Base[] | void>}\n     */\n    listAll(): Observable<Base[] | void> {\n        return this._basesDocumentService.find();\n    }\n\n    /**\n     * Returns one cupcakes of the list matching id in parameter\n     *\n     * @param {string} id of the bases\n     *\n     * @returns {Observable<Base>}\n     */\n    one(id: string): Observable<Base> {\n        return this._basesDocumentService.findById(id)\n            .pipe(\n                catchError(e => throwError(Biim.preconditionFailed(e.message))),\n                flatMap(_ =>\n                    !!_ ?\n                        of(_) :\n                        throwError(Biim.notFound(`Aucune base avec l'id '${id}' trouve`))\n                )\n            );\n    }\n}\n"]}