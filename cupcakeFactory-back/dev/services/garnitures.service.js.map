{"version":3,"file":"garnitures.service.js","sourceRoot":"","sources":["../../src/services/garnitures.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAAsC;AACtC,yCAA4C;AAE5C,+BAAkD;AAClD,8CAAoD;AAEpD,+EAA0E;AAG1E,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAC1B;;OAEG;IACH,YAAoB,0BAAqD;QAArD,+BAA0B,GAA1B,0BAA0B,CAA2B;IACzE,CAAC;IAED;;;;OAIG;IACH,OAAO;QACH,OAAO,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,CAAC;IAClD,CAAC;IAED;;;;;;OAMG;IACH,GAAG,CAAC,EAAU;QACV,OAAO,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,EAAE,CAAC;aAC9C,IAAI,CACD,sBAAU,CAAC,CAAC,CAAC,EAAE,CAAC,iBAAU,CAAC,WAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAC/D,mBAAO,CAAC,CAAC,CAAC,EAAE,CACR,CAAC,CAAC,CAAC,CAAC,CAAC;YACD,SAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACP,iBAAU,CAAC,WAAI,CAAC,QAAQ,CAAC,+BAA+B,EAAE,UAAU,CAAC,CAAC,CAC7E,CACJ,CAAC;IACV,CAAC;CACJ,CAAA;AAlCY,iBAAiB;IAD7B,iBAAU,EAAE;qCAKuC,uDAAyB;GAJhE,iBAAiB,CAkC7B;AAlCY,8CAAiB","sourcesContent":["import { Biim } from '@hapiness/biim';\nimport { Injectable } from '@hapiness/core';\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError, flatMap} from 'rxjs/operators';\nimport { Garniture } from '../interfaces';\nimport { GarnituresDocumentService } from './garnitures-document.service';\n\n@Injectable()\nexport class GarnituresService {\n    /**\n     * Class constructor\n     */\n    constructor(private _garnituresDocumentService: GarnituresDocumentService) {\n    }\n\n    /**\n     * Returns all existing garnitures in the list\n     *\n     * @returns {Observable<Garniture[] | void>}\n     */\n    listAll(): Observable<Garniture[] | void> {\n        return this._garnituresDocumentService.find();\n    }\n\n    /**\n     * Returns one garniture of the list matching id in parameter\n     *\n     * @param {string} id of the garniture\n     *\n     * @returns {Observable<Garniture>}\n     */\n    one(id: string): Observable<Garniture> {\n        return this._garnituresDocumentService.findById(id)\n            .pipe(\n                catchError(e => throwError(Biim.preconditionFailed(e.message))),\n                flatMap(_ =>\n                    !!_ ?\n                        of(_) :\n                        throwError(Biim.notFound(`Aucune garniture avec l'id '${id}' trouve`))\n                )\n            );\n    }\n}\n"]}